const splashscreenHtml='\n<div id="splashscreen" data-step="loading">\n  <h1>PWA template</h1>\n  <div id="splashscreen-text">\n    <noscript>\n      <h1>JavaScript est requis</h1>\n      <p>\n        Cette page a besoin de Javascript pour fonctionner et JavaScript n\'est pas disponible.\n      </p>\n    </noscript>\n  </div>\n  <div id="splashscreen-text-variants" style="display: none">\n    <div id="loader">Loading...</div>\n    <div id="network-error-screen">\n      Une erreur est survenue pendant le chargement du fichier principal.\n    </div>\n    <div id="runtime-error-screen">\n      <p>Une erreur est survenu pendant l\'exécution du fichier principal.</p>\n      <br />\n      <details>\n        <summary>Voir le détail</summary>\n        <h6 id="runtime-error-title">{runtimeErrorTitle}</h6>\n        <pre id="runtime-error-message">{runtimeErrorMessage}</pre>\n      </details>\n    </div>\n  </div>\n</div>',splashScreenCss='\n#splashscreen {\n  position: fixed;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  opacity: 0;\n  /* transform: scale(0); */\n\n  animation-name: splashin;\n  animation-duration: 0.4s;\n  animation-delay: 0.1s;\n  /* in case browser is very fast, don\'t display at all */\n  animation-fill-mode: forwards;\n}\n\n#splashscreen[data-step="loading"] + #app {\n  visibility: hidden;\n  /*\n  avoid big image to create a scroll\n  or if the game is too big it will\n  increase splashscreen size\n  */\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n#splashscreen[data-step="loaded"] {\n  animation-name: splashout;\n  animation-fill-mode: forwards;\n}\n\n@keyframes splashin {\n  from {\n    opacity: 0;\n    /* transform: scale(0); */\n  }\n\n  to {\n    opacity: 1;\n    /* transform: scale(1); */\n  }\n}\n\n@keyframes splashout {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    display: none;\n  }\n}\n\n#splashscreen #splashscreen-text {\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 80%;\n}\n\n#splashscreen #errorscreen {\n  display: block;\n}\n\n#splashscreen #errorscreen details {\n  max-width: 500px;\n}\n\n#splashscreen details pre {\n  overflow: auto;\n}\n\n#splashscreen img {\n  animation: loading 1.3s ease-in-out infinite alternate;\n}\n\n@keyframes loading {\n  0% {\n    transform: rotate(-90deg) scale(1);\n  }\n\n  100% {\n    transform: rotate(90deg) scale(1.3);\n  }\n}',style=document.createElement("style");style.innerHTML=splashScreenCss,document.body.appendChild(style);const div=document.createElement("div");div.innerHTML=splashscreenHtml;const splashscreenNode=div.children[0];document.body.appendChild(splashscreenNode);const splashscreenElement=document.querySelector("#splashscreen"),mainScript=window.parent.document.querySelector("script#main-script"),activateSplashscreenVariant=(e,n={})=>{const r=document.querySelector("#splashscreen-text");r.innerHTML="";const t=document.querySelector("#".concat(e)).cloneNode(!0),s=e=>{"#text"===e.nodeName?e.textContent=e.textContent.replace(/\${(\w*)}/g,((e,r)=>n.hasOwnProperty(r)?n[r]:"")):Array.from(e.childNodes).forEach((e=>{s(e)}))};return s(t),r.appendChild(t),t},showLoaderTimeout=setTimeout((()=>{activateSplashscreenVariant("loader")}),2500);mainScript.onerror=()=>{clearTimeout(showLoaderTimeout),activateSplashscreenVariant("network-error-screen")};const errorEventCallback=e=>{window.parent.removeEventListener("error",errorEventCallback);const{message:n,filename:r,lineno:t,colno:s}=e;clearTimeout(showLoaderTimeout),activateSplashscreenVariant("runtime-error-screen",{runtimeErrorTitle:r?"".concat(r,":").concat(t,":").concat(s):"<Aucun fichier associé a cette erreur>",runtimeErrorMessage:n||"<Aucun message associé a cette erreur>\n      (Ouvrir les devtools pour en savoir plus)"})};window.addEventListener("error",errorEventCallback),window.splashscreen={remove:()=>{clearTimeout(showLoaderTimeout),window.parent.removeEventListener("error",errorEventCallback),splashscreenElement.setAttribute("data-step","loaded"),setTimeout((()=>{splashscreenElement.style.display="none"}),300)}};